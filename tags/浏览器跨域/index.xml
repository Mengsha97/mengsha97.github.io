<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>浏览器跨域 - 标签 - Simona's Blog</title><link>http://mengsha97.github.io/tags/%E6%B5%8F%E8%A7%88%E5%99%A8%E8%B7%A8%E5%9F%9F/</link><description>浏览器跨域 - 标签 - Simona's Blog</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><lastBuildDate>Sat, 14 Mar 2020 21:35:25 +0000</lastBuildDate><atom:link href="http://mengsha97.github.io/tags/%E6%B5%8F%E8%A7%88%E5%99%A8%E8%B7%A8%E5%9F%9F/" rel="self" type="application/rss+xml"/><item><title>【学习记录】利用python解决chrome异步加载本地文件报错</title><link>http://mengsha97.github.io/posts/try-python-cross/</link><pubDate>Sat, 14 Mar 2020 21:35:25 +0000</pubDate><author><name>Simona</name><uri>https://github.com/Mengsha97</uri><email>laimengsha@qq.com</email></author><guid>http://mengsha97.github.io/posts/try-python-cross/</guid><description>本文参考： https://developer.mozilla.org/zh-CN/docs/Learn/Common_questions/set_up_a_local_testing_server 安装 Python(windows 下)
转到 python.org 在“下载”部分下，单击 Python“3.xxx”的链接。 在页面的底部，选择 Windows x86 可执行文件安装程序并下载它。 当它已经下载，运行它。 在第一个安装程序页面上，确保选中了“将 Python 3.xxx 添加到 PATH”复选框。 单击安装，然后在安装完成后单击关闭。 打开命令提示符，检查 Python 是否安装，输入以下命令：（“V”是大写）
python -V 使用 cd 命令导航到示例所在的目录。
输入命令在该目录中启动服务器：
#如果上面返回的Python版本是3.X python -m http.server #如果上面返回的Python版本是2.X python -m SimpleHTTPServer 默认情况下这将在本地 Web 服务器上的端口 8000 上运行目录的内容，可以通过转到 localhost:8000Web 浏览器中的 URL 来访问此服务器。在这里可以看到列出的目录的内容，点击想运行的 HTML 文件。 注意：如果您已经在端口 8000 上运行了某些东西，则可以通过运行 server 命令，然后选择另一个端口号（例如 python -m http.server 7800 （Python 3.x）或 python -m SimpleHTTPServer 7800 （Python 2.x））来选择另一个端口。然后可以访问 localhost:7800。
如果要了解如何在本地运行服务器端语言，可以参考 https://developer.mozilla.org/zh-CN/docs/Learn/Common_questions/set_up_a_local_testing_server 的最后部分。
这篇博客几乎是从上面照搬下下来的，以防侵权，我在文章开头已经标明出处，写在这里的目的是怕我自己会忘记还有一个这样的方法，再加上，写在这里也更方便我之后查找。</description></item><item><title>【学习记录】利用tomcat解决chrome异步加载本地文件报错</title><link>http://mengsha97.github.io/posts/try-tomcat/</link><pubDate>Sat, 14 Mar 2020 19:41:21 +0000</pubDate><author><name>Simona</name><uri>https://github.com/Mengsha97</uri><email>laimengsha@qq.com</email></author><guid>http://mengsha97.github.io/posts/try-tomcat/</guid><description><![CDATA[在学习 ajax 的过程中，学习了一个例子，其中代码如下：
function updateDisplay(verse) { verse = verse.replace(&#34; &#34;, &#34;&#34;); verse = verse.toLowerCase(); let url = verse + &#34;.txt&#34;; let request = new XMLHttpRequest(); request.open(&#34;GET&#34;, url); request.responseType = &#34;text&#34;; request.onload = function () { poemDisplay.textContent = request.response; }; request.send(); } 但是按照以往直接打开的做法，浏览器控制台出现如下错误
from origin 'null' has been blocked by CORS policy: Cross origin requests are only supported for protocol schemes: http, data, chrome, chrome-extension, https. 因为是从本地文件运行示例的，一些浏览器（包括 Chrome）不会运行异步请求，这是因为安全限制。（了解详情可参考：https://developer.mozilla.org/zh-CN/docs/learn/Server-side/First_steps/Website_security）
为了解决这个问题，经过多方搜索，我参考了 https://blog.csdn.net/saber872138/article/details/82995238 答案中的解决方法一，即利用 tomcat 解决。 按照 https://how2j.]]></description></item></channel></rss>