<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>css - 标签 - Simona's Blog</title><link>http://mengsha97.github.io/tags/css/</link><description>css - 标签 - Simona's Blog</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><lastBuildDate>Sun, 22 Nov 2020 16:45:45 +0000</lastBuildDate><atom:link href="http://mengsha97.github.io/tags/css/" rel="self" type="application/rss+xml"/><item><title>【慕课网】六个案例学会响应式布局</title><link>http://mengsha97.github.io/posts/imooc-self-adaption/</link><pubDate>Sun, 22 Nov 2020 16:45:45 +0000</pubDate><author><name>Simona</name><uri>https://github.com/Mengsha97</uri><email>laimengsha@qq.com</email></author><guid>http://mengsha97.github.io/posts/imooc-self-adaption/</guid><description><![CDATA[第一章 课程介绍讲师：大谷 课程：https://www.imooc.com/learn/1285 1-1 课程介绍 课程安排
CSS 中媒体查询的作用和使用方法
flex 弹性盒子的用法
rem 的作用和使用方法
响应式布局、弹性布局等六个课程案例
mediaquery 媒体查询 2-1 什么是媒体查询概念：为不同尺寸的屏幕设定不同的 CSS 样式
2-2 @media 常用参数 属性名称 作用 width、height 浏览器可视宽度、高度 device-width 设备屏幕的宽度 device-height 设备屏幕的高度 2-3 媒体查询其他引入方式-1&lt;style media=&#34;(min-device-width:100px) and (max-device-width:300px)&#34;&gt; #div0 { background-color: red; } &lt;/style&gt; 媒体查询其他引入方式-2&lt;link href=&#34;css/css-1.css&#34; rel=&#34;stylesheet&#34; media=&#34;(min-device-width:100px) and (max-device-width:300px)&#34; /&gt; 媒体查询其他引入方式-3@media (min-device-width: 400px) and (max-device-width: 500px) { #div0 { background-color: blue; } } 第三章 flex 基础与应用 3-1 什么是 flex概念：FlexiableBox 即是弹性盒子，用来进行弹性布局，可以配合 rem 处理尺寸的适配问题]]></description></item><item><title>【学习记录】用CSS隐藏一个元素的方法</title><link>http://mengsha97.github.io/posts/hideelement/</link><pubDate>Sun, 19 Jul 2020 16:25:47 +0000</pubDate><author><name>Simona</name><uri>https://github.com/Mengsha97</uri><email>laimengsha@qq.com</email></author><guid>http://mengsha97.github.io/posts/hideelement/</guid><description>CSS display 的值是 none。 type=&amp;ldquo;hidden&amp;quot;的表单元素。 宽度和高度都显式设置为 0。 一个祖先元素是隐藏的，该元素是不会在页面上显示 CSS visibility 的值是 hidden CSS opacity 的指是 0 如果元素中占据文档中一定的空间,元素被认为是可见的。 可见元素的宽度或高度，是大于零。 元素的 visibility: hidden 或 opacity: 0 被认为是可见的，因为他们仍然占用空间布局。</description></item><item><title>【uniapp】关于uniapp中的CSS变量</title><link>http://mengsha97.github.io/posts/css-variable/</link><pubDate>Tue, 12 May 2020 20:22:44 +0000</pubDate><author><name>Simona</name><uri>https://github.com/Mengsha97</uri><email>laimengsha@qq.com</email></author><guid>http://mengsha97.github.io/posts/css-variable/</guid><description><![CDATA[来自：https://uniapp.dcloud.io/frame?id=css%e5%8f%98%e9%87%8f 在开发过程中，既不想打开 NavigationStyle，又想让页面空出手机标签的位置，可以使用 css 变量———&ndash;status-bar-height 使用方法：
&lt;template&gt; &lt;!-- HBuilderX 2.6.3+ 新增 page-meta, 详情：https://uniapp.dcloud.io/component/page-meta --&gt; &lt;page-meta&gt; &lt;navigation-bar /&gt; &lt;/page-meta&gt; &lt;view&gt; &lt;view class=&#34;status_bar&#34;&gt; &lt;!-- 这里是状态栏 --&gt; &lt;/view&gt; &lt;view&gt; 状态栏下的文字 &lt;/view&gt; &lt;/view&gt; &lt;/template&gt; &lt;style&gt; .status_bar { height: var(--status-bar-height); width: 100%; } &lt;/style&gt; 这里得出来的变量单位是 px，也可以直接用在标签上 另外还有其他两个 CSS 变量，如下
CSS 变量 描述 App 小程序 H5 &ndash;status-bar-height 系统状态栏高度 系统状态栏高度、nvue 注意见下 25px 0 &ndash;window-top 内容区域距离顶部的距离 0 0 NavigationBar 的高度 &ndash;window-bottom 内容区域距离底部的距离 0 0 TabBar 的高度 ]]></description></item><item><title>【慕课网】一课全面掌握主流CSS布局</title><link>http://mengsha97.github.io/posts/imooc-csslayout/</link><pubDate>Wed, 15 Apr 2020 21:11:41 +0000</pubDate><author><name>Simona</name><uri>https://github.com/Mengsha97</uri><email>laimengsha@qq.com</email></author><guid>http://mengsha97.github.io/posts/imooc-csslayout/</guid><description><![CDATA[讲师：KingJ 课程：https://www.imooc.com/learn/1189 居中布局 水平居中布局指当前元素在父级元素容器中，水平方向是居中显示的
inline-block+text-align 属性配合使用 关键代码&lt;div id=&#34;parent&#34;&gt; &lt;div id=&#34;child&#34;&gt;子级元素&lt;/div&gt; &lt;/div&gt; #parent{ text-align:center; } #child{ display:inline-block; } 属性的说明 text-align 属性：是为文本内容设置对齐方式 left：左对齐 center：居中对齐 right：右对齐 display 属性： block：块级元素 inline：内联元素（text-align 属性有效） 当 display 设置为 inline 时，css 中的 width 和 height 属性是无效的 inline-block：行内块级元素（块级+内联） width 和 height 属性值是有效的 优缺点 优点：浏览器兼容性比较好 缺点：text-align 属性具有继承性，导致子级元素的文本也是居中显示的 解决方式：可以在子级元素中设置 text-align 为想要的效果，这样会覆盖父级元素设置的效果 table+margin 属性配合使用 关键代码&lt;div class=&#34;parent&#34;&gt; &lt;div class=&#34;child&#34;&gt;子级元素&lt;/div&gt; &lt;/div&gt; .child{ display:table; margin:0 auto; } 属性说明 margin 属性：外边距 一个值——上右下左四个方向 两个值——第一个表示上下，第二个表示左右 三个值——第一个值表示上，第二个值表示左右，第三个值表示下 auto：表示浏览器自动分配，浏览器会等分左右外边距 四个值——分别代表上右下左 display 设置为 block 和 table 都可水平居中 设置为 inline 并且在块中添加文字，不会水平居中， 设置为 inline-block 也不会水平居中 优缺点 优点：只需要对子级元素进行设置就可以实现水平方向居中效果 缺点：如果子级元素脱离文档流，导致 margin 属性的值无效 css 中脱离文档流的方式 设置 float 设置 position 为 absolute 设置 position 为 fixed absolute+transform 属性配合使用 关键代码&lt;div class=&#34;parent&#34;&gt; &lt;div class=&#34;child&#34;&gt;居中&lt;/div&gt; &lt;/div&gt; .]]></description></item><item><title>【学习记录】CSS</title><link>http://mengsha97.github.io/posts/log-css/</link><pubDate>Tue, 31 Mar 2020 15:30:11 +0000</pubDate><author><name>Simona</name><uri>https://github.com/Mengsha97</uri><email>laimengsha@qq.com</email></author><guid>http://mengsha97.github.io/posts/log-css/</guid><description><![CDATA[px 与 em 的转换在大多数浏览器下的默认换算是 1em==16px.可以参考 http://riddle.pl/emcalc/ 选择器优先级计算一个选择器的优先级可以说是由四个部分相加(分量)，可以认为是个十百千——四位数的四个位数：
千位：如果声明在 style 的属性（内联样式）则该位得一分。这样的生命没有选择器，所以得分总是 1000。 百位：选择器中包含 ID 选择器则该位得一分。 十位：选择器中包含类选择器、属性选择器或者伪类则该位得一分。 个位：选择器中包含元素、伪元素选择器则该位得一分。 例如：
选择器 千位 百位 十位 个位 优先级 h1 0 0 0 1 0001 h1 + p::first-letter 0 0 0 3 0003 li &gt; a[href*=&ldquo;en-US&rdquo;] &gt; .inline-warning 0 0 2 2 0022 #identifier 0 1 0 0 0100 内联样式 1 0 0 0 1000 但是“!important”可以覆盖掉所有优先级的计算]]></description></item></channel></rss>