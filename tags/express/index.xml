<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>Express - 标签 - Simona's Blog</title><link>http://mengsha97.github.io/tags/express/</link><description>Express - 标签 - Simona's Blog</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><lastBuildDate>Wed, 08 Apr 2020 23:24:12 +0000</lastBuildDate><atom:link href="http://mengsha97.github.io/tags/express/" rel="self" type="application/rss+xml"/><item><title>【慕课网】Vue2.0+Node.js+MongoDB全栈打造商城系统</title><link>http://mengsha97.github.io/posts/imooc-mongodb-vue-express-demo/</link><pubDate>Wed, 08 Apr 2020 23:24:12 +0000</pubDate><author><name>Simona</name><uri>https://github.com/Mengsha97</uri><email>laimengsha@qq.com</email></author><guid>http://mengsha97.github.io/posts/imooc-mongodb-vue-express-demo/</guid><description>去年看了这个视频，然后根据方法一步步做出了毕设，考研一年没有写过代码了，很多都忘了，现在为了重构毕设的项目，重新看了这个视频，vue 已经更新了，比如视频创建项目是用“vue init”，但是现在版本的 vue-cli 用的是“vue create”，于是为了跟上新技术，很多地方没有仿照视频一起做，而是看了官方文档再写的。这篇博客记录一下课程上提到的一些插件和便捷开发的方法。
express-generator看 express 中文网 https://www.expressjs.com.cn/starter/generator.html 用 express-generator 新建一个 server 目录
express --view=pug server vue-lazyload可以在www.npmjs.com上查找到vue-lazyload，根据文档的内容来实现图片懒加载
pm2基于进程管理，可以实现当前电脑的负载均衡
mongoose对 MongoDB 的封装
tips 用 MongoDB 创建表时，表名后面一定要加“s”</description></item><item><title>【实战记录】MDN-Express Web Framework (Node.js/JavaScript)</title><link>http://mengsha97.github.io/posts/mdn-local-library/</link><pubDate>Mon, 23 Mar 2020 23:23:30 +0000</pubDate><author><name>Simona</name><uri>https://github.com/Mengsha97</uri><email>laimengsha@qq.com</email></author><guid>http://mengsha97.github.io/posts/mdn-local-library/</guid><description>实战网址：https://developer.mozilla.org/zh-CN/docs/Learn/Server-side/Express_Nodejs 源码：https://github.com/mdn/express-locallibrary-tutorial 搭建开发环境 安装 Node 下载安装包 访问 https://nodejs.org/zh-cn/ 点击“推荐多数用户使用”（LTS），下载。 安装（Node.js 与 npm 同时安装） 测试 Node.js 与 npm 是否安装成功 在命令行种输入：
$ node -v 与：
$ npm -v 看是否返回结果
安装 Express 应用生成器Express 应用生成器工具可以生成一个 Express 应用的“框架”，用 npm 全局安装（-g 参数可以将该工具全局安装，这样就可以在任意应用中使用了）
$ npm install express-generator -g 示例创建一个名为“helloword”的 Express 应用
$ express helloword 安装应用的所有依赖
$ cd helloworld $ npm install 运行这个应用（Windows 环境）：
&amp;gt; SET DEBUG=helloworld:* &amp;amp; npm start (Linux/macOS 环境)
$ DEBUG=helloworld:* npm start 这样设置之后，只要执行下面的命令，应用即启动，默认是 3000 端口</description></item></channel></rss>